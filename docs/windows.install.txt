Parts of this install have a depenceny on libraries from Microsoft Visual C++ Redistributable for Visual Studio 2022
If you get an error "MSVCP140.dll missing",  see bottom of this document for how to source the required files

Python 3.11
Download https://www.python.org/ftp/python/3.11.9/python-3.11.9-embed-amd64.zip
Extract it somewhere you can find it again. EG: c:\Python311

Add this location to your path, in Win10/11 this has been buried in settings, so maybe use powershell (option 1):
Option 1) Right click on start anda select 'Terminal (Admin)' or 'Powershell (Admin)'. 
Add two paths. The main python directory and the scripts directory.
Run
	$env:Path = 'C:\Python311;C:\Python311\Scripts;' + $env:Path
Option 2) Open Settings, Click on System
Scroll down to About.
On the right hand side, under "Related Settings" (Win11 is "Related Links"), select "Advanced System Settings"
	This will popup a system properties window, with the "Advanced" tab selected
Select the "Environment Variables..." button near the bottom of this window
Add two paths. The main python directory and the scripts directory
EG:
	C:\Python311\
	C:\Python311\Scripts\

Open a command prompt and change directory to where you cloned PathofBuilding
Jump to "upgrade pip"

Python 3.12 -- Developer test only. Nuitka doesn't support python versions >3.11
Download https://www.python.org/ftp/python/3.12.2/python-3.12.2-embed-amd64.zip
Extract it somewhere you can find it again. EG: c:\Python312
Follow path instructions above substituting the correct directory.

upgrade pip
-----------
In a Admin command/Terminal/Powershell prompt, run
python.exe -m pip install --upgrade pip

- Install poetry and install dependencies.
Change to the directory you cloned pyPoB
pip install poetry
poetry install
	Creating virtualenv pathofbuilding-python--IwoLpd0E in c:\Users\Peter\AppData\Local\pypoetry\Cache
	Installing dependencies from lock file

	Package operations: 22 installs, 0 updates, 0 removals
	...

For the first time install, run devel_run.cmd, to make sure the .ui files get imported.

After that, using your IDE (pyCharm, vscode, etc)

Without a IDE
--------------
Option 1)
	Keep using devel_run.cmd

Option 2)
	- Switch to the virtual environment
	poetry shell

	- Run pyPoB
	python PathOfBuilding.py


Making an .exe
--------------
Run scripts\make_exe.cmd
The .exe will be in the current directory
Copy the .exe to a new location so the development files don't interfere (I'm pretty certain they don't, but ...)


MSVCP140.dll missing
--------------------
Microsoft Visual C++ Redistributable for Visual Studio 2022
Bottom of https://visualstudio.microsoft.com/downloads/
https://aka.ms/vs/17/release/VC_redist.x64.exe



Git for Windows
https://git-scm.com/download/win


Changing python versions
------------------------
Whenever you change dependencies by hand in your pyproject.toml you have to take care of these points:

    Run poetry lock --no-update afterwards. The reasons for this is, that poetry install takes the poetry.lock as input if can find one and not the pyproject.toml.

    If you change the python version, remove the .venv before running poetry install. poetry doesn't change the python version of a venv once it is created, because it uses the python version itself to create the virtualenv.

